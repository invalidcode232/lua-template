import { Expression } from 'moonsharp-luaparse';
import { Module } from './module';
import { Identifiers, LuaVersion } from '../common/options';
import { RecursiveMutable, RecursivePartial, RecursiveReadonly } from '../common/utility';
export declare type ExpressionHandler = (module: Module, expression: Expression) => string | string[] | null | undefined | void;
export declare type Process = (module: Module, options: RealizedOptions) => string;
export declare type RealizedOptions = RecursiveReadonly<{
    expressionHandler?: ExpressionHandler;
    force: boolean;
    identifiers: Identifiers;
    isolate: boolean;
    luaVersion: LuaVersion;
    metadata: boolean;
    paths: readonly string[];
    postprocess?: Process;
    preprocess?: Process;
    rootModuleName: string;
}>;
export declare type Options = RecursiveMutable<RecursivePartial<RealizedOptions>>;
export declare const defaultOptions: RealizedOptions;
//# sourceMappingURL=options.d.ts.map